<?php
/*********************************************************************************
 * By installing or using this file, you are confirming on behalf of the entity
 * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
 * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
 * http://www.sugarcrm.com/master-subscription-agreement
 *
 * If Company is not bound by the MSA, then by installing or using this file
 * you are agreeing unconditionally that Company will be bound by the MSA and
 * certifying that you have authority to bind Company accordingly.
 *
 * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
 ********************************************************************************/

/**
 * Scan all ModuleBuilder modules and look for modules with missing
 * moduleListSingular entry. Set it to moduleList entry.
 */
class SugarUpgradeFixSingularList extends UpgradeScript
{
    public $order = 7100;
    public $type = self::UPGRADE_CUSTOM;

    public function run()
    {
        if(version_compare($this->from_version, '7.0', '>=')) {
            // there's no need to run this on 7
            return;
        }

        if(empty($this->upgrader->state['MBModules'])) {
            // No MB modules - nothing to do
            return;
        }
        $app_list_strings = return_app_list_strings_language("en_us");
        $add_strings = '';
        foreach($this->upgrader->state['MBModules'] as $MBModule) {
            if(!isset($app_list_strings['moduleListSingular'][$MBModule]) && !empty($app_list_strings['moduleList'][$MBModule])) {
                $exstring = var_export($app_list_strings['moduleList'][$MBModule], true);
                $add_strings .= "\$app_list_strings['moduleListSingular']['$MBModule'] = $exstring;\n";
            }
        }

        if(!empty($add_strings)) {
            $add_strings = "<?php \n/* This file was generated by Sugar Upgrade */\n".$add_strings;
            $this->putFile("custom/Extension/application/Ext/Language/en_us.singularfix.php", $add_strings);
            $mi = new ModuleInstaller();
            $mi->silent = true;
            $mi->rebuild_languages(array('en_us' => 'en_us'));
        }
    }

}
