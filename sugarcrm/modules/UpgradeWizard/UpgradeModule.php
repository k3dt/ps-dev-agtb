<?php
 if(!defined('sugarEntry') || !sugarEntry) die('Not A Valid Entry Point');
/*********************************************************************************
 * The contents of this file are subject to the SugarCRM Master Subscription
 * Agreement ("License") which can be viewed at
 * http://www.sugarcrm.com/crm/master-subscription-agreement
 * By installing or using this file, You have unconditionally agreed to the
 * terms and conditions of the License, and You may not use this file except in
 * compliance with the License.  Under the terms of the license, You shall not,
 * among other things: 1) sublicense, resell, rent, lease, redistribute, assign
 * or otherwise transfer Your rights to the Software, and 2) use the Software
 * for timesharing or service bureau purposes such as hosting the Software for
 * commercial gain and/or for the benefit of a third party.  Use of the Software
 * may be subject to applicable fees and any use of the Software without first
 * paying applicable fees is strictly prohibited.  You do not have the right to
 * remove SugarCRM copyrights from the source code or user interface.
 *
 * All copies of the Covered Code must include on each user interface screen:
 *  (i) the "Powered by SugarCRM" logo and
 *  (ii) the SugarCRM copyright notice
 * in the same form as they appear in the distribution.  See full license for
 * requirements.
 *
 * Your Warranty, Limitations of liability and Indemnity are expressly stated
 * in the License.  Please refer to the License for the specific language
 * governing these rights and limitations under the License.  Portions created
 * by SugarCRM are Copyright (C) 2004-2012 SugarCRM, Inc.; All Rights Reserved.
 ********************************************************************************/
if(empty($argv) || empty($argc) || $argc != 3) {
    die("Use UpgradeModule.php /path/to/sugar module");
}

$sapi_type = php_sapi_name();
if (substr($sapi_type, 0, 3) != 'cli') {
    die("UpgradeModule.php is CLI only.");
}

chdir($argv[1]);
define('ENTRY_POINT_TYPE', 'api');
if(!defined('sugarEntry'))define('sugarEntry', true);

require_once('include/entryPoint.php');
require_once 'ModuleInstall/ModuleInstaller.php';
require_once 'modules/UpgradeWizard/SidecarUpdate/SidecarMetaDataUpgrader.php';
require_once 'include/MetaDataManager/MetaDataManager.php';

function scriptErrorHandler($errno, $errstr, $errfile, $errline, $errcontext)
{
    $GLOBALS['log']->fatal("PHP: [$errno] $errstr in $errfile at $errline"."\n".var_export(debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS), true));
}

class SidecarMetaDataUpgrader2 extends SidecarMetaDataUpgrader
{
    public function logUpgradeStatus($msg)
    {
        $GLOBALS['log']->info($msg);
    }
}

$GLOBALS['app_list_strings'] = return_app_list_strings_language($GLOBALS['current_language']);
$smdUpgrader = new SidecarMetaDataUpgrader2();
$module = $argv[2];
$smdUpgrader->setModule($module);
if(($bwcPos = array_search($module, $GLOBALS['bwcModules'])) !== false) {
    // remove it from BWC modules for now
    // if we succeed, it becomes permanent
    unset($GLOBALS['bwcModules']);
}
set_error_handler('scriptErrorHandler', E_ALL & ~E_STRICT & ~E_DEPRECATED);
$smdUpgrader->upgrade();
$fail = $smdUpgrader->getFailures();
if(!empty($fail)) {
    echo "***FAILURE***\n".join("\n", $fail)."\n";
    exit(1);
} else {
    if(count($smdUpgrader->getFilesForUpgrade()) > 0) {
        echo "\nSUCCESS!\nPlease check the result, and if you are satisfied, please delete these files:\n".join("\n", $smdUpgrader->getFilesForRemoval());
        echo "\n";
    } else {
        echo "\nNo files needed upgrade.\n";
    }
    // take module out of BWC
    if(file_exists("custom/Extension/application/Ext/Include/upgrade_bwc.php")) {
        $bwcModules = array();
        include 'custom/Extension/application/Ext/Include/upgrade_bwc.php';
        $bwcPos = array_search($module, $bwcModules);
        if($bwcPos !== false) {
            unset($bwcModules[$bwcPos]);
            // resave the file
            $data = "<?php \n/* This file was generated by Sugar Upgrade */\n";
            foreach($bwcModules as $bmodule) {
                $data .= '$bwcModules[] = \''.addslashes($bmodule)."';\n";
            }
            sugar_file_put_contents("custom/Extension/application/Ext/Include/upgrade_bwc.php", $data);
        }
    }
    // refresh caches
    $mi = new ModuleInstaller();
    $mi->silent = true;
    $mi->rebuild_extensions();
    SugarAutoLoader::buildCache();
    // Sets up the metadata cache for the base platform only after forcefully
    // destoying the cache. Also sets up current language metadata files
    MetaDataManager::clearAPICacheOnShutdown();
    MetaDataManager::setupMetadata(array('base'), array($GLOBALS['current_language']));
    exit(0);
}

