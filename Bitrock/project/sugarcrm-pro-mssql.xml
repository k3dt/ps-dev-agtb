<project>
    <shortName>sugarcrm</shortName>
    <fullName>SugarCRM on FastStack</fullName>
    <version>6.1.0</version>
    <installerFilename>${product_shortname}-PRO-${product_version}-${platform_name}-mssql-installer.${platform_exec_suffix}</installerFilename>
    <licenseFile>license.txt</licenseFile>
    <wrapLicenseFileText>1</wrapLicenseFileText>
    <leftImage>images/sugarleft.png</leftImage>
    <wmImage>images/wmImage.png</wmImage>
    <logoImage>images/sugarcrm_logo_transparent_200x36.gif</logoImage>
    <splashImage>images/sugarsplash.png</splashImage>
    <allowLanguageSelection>0</allowLanguageSelection>
    <outputDirectory>/home/build/sugarbuild-BitRock-6.1.0/zip</outputDirectory>
    <projectSchemaVersion>1.2</projectSchemaVersion>
    <saveRelativePaths>1</saveRelativePaths>
    <startMenuGroupName>${product_fullname}</startMenuGroupName>
    <style>standard</style>
    <vendor>SugarCRM</vendor>
    <allowComponentSelection>0</allowComponentSelection>

    <preBuildActionList>	
	<setInstallerVariable name="mssql_iis_mode" value="1" persist="1" />			

        <!-- MySQL -->
        <setInstallerVariable name="component(mysql).parameter(mysql1).parameter(mysql_binary_directory).cliOptionShow" value="0" />      
        <setInstallerVariable name="component(mysql).parameter(mysql1).parameter(mysql_hostname).cliOptionShow" value="0" />

        <setInstallerVariable name="component(mysql).parameter(mysql_installtype).cliOptionShow" value="0" />
		<setInstallerVariable name="component(mysql).parameter(mysql_installtype_options).value" value="bundled" />
		<setInstallerVariable name="component(mysql).parameter(mysql_installtype).value" value="bundled" />
		<setInstallerVariable name="component(mysql).parameter(mysql_installtype).ask" value="no" />	

        <setInstallerVariable name="component(mysql).parameter(mysql2).parameter(mysql_root_password).cliOptionText" value="MySQL Server root password" />
        <setInstallerVariable name="component(mysql).parameter(mysql2).parameter(mysql_root_password).description" value="Root password" />

		<setInstallerVariable name="component(mysql).parameter(mysql1).title" value="DB Port" />
		<setInstallerVariable name="component(mysql).parameter(mysql1).description" value="MySQL database Port" />
		<setInstallerVariable name="component(mysql).parameter(mysql1).explanation" value="Please enter the port that the bundled MySQL database will use." />
        <setInstallerVariable name="component(mysql).parameter(mysql1).parameter(mysql_port).description" value="MySQL Server port" />

		<setInstallerVariable name="component(mysql).parameter(mysql_data).ask" value="no" />	
		<setInstallerVariable name="component(mysql).parameter(mysql_data).cliOptionShow" value="no" />	
		<setInstallerVariable name="component(mysql).parameter(mysql_data).parameter(mysql_db_name).ask" value="no" />
		<setInstallerVariable name="component(mysql).parameter(mysql_data).parameter(mysql_db_name).cliOptionShow" value="no" />
		<setInstallerVariable name="component(mysql).parameter(mysql_data).parameter(mysql_db_username).ask" value="no" />
		<setInstallerVariable name="component(mysql).parameter(mysql_data).parameter(mysql_db_username).cliOptionShow" value="no" />
		<setInstallerVariable name="component(mysql).parameter(mysql_data).parameter(mysql_db_password).ask" value="no" />
		<setInstallerVariable name="component(mysql).parameter(mysql_data).parameter(mysql_db_password).cliOptionShow" value="no" />

        <!-- Apache -->
		<setInstallerVariable name="component(apache).parameter(apache_server_port).title" value="Web Server Port" />
        <setInstallerVariable name="component(apache).parameter(apache_server_port).description" value="Apache Web Server Port" />
		<setInstallerVariable name="component(apache).parameter(apache_server_port).explanation" value="Please enter the port that the bundled Apache Server will listen to by default." />
		<setInstallerVariable name="component(apache).parameter(apache_server_sslport).title" value="Web Server Port" />
        <setInstallerVariable name="component(apache).parameter(apache_server_sslport).description" value="SSL Port" />
		<setInstallerVariable name="component(apache).parameter(apache_server_sslport).explanation" value="Please enter the port that the bundled Apache Server will use for SSL access." />
		<setInstallerVariable name="component(apache).parameter(apache_server_domainname).title" value="Web Server Domain" />
        <setInstallerVariable name="component(apache).parameter(apache_server_domainname).description" value="Web Server domain" />
		<setInstallerVariable name="component(apache).parameter(apache_server_domainname).explanation" value="" />

        <!-- PHPMyAdmin -->
        <setInstallerVariable name="component(phpmyadmin).show" value="1" />
        <setInstallerVariable name="component(phpmyadmin).canBeEdited" value="1" />
        <setInstallerVariable name="component(phpmyadmin).description" value="phpMyAdmin" />
        <setInstallerVariable name="component(phpmyadmin).parameter(phpmyadmin_destination).value" value="htdocs" />
        <setInstallerVariable name="component(phpmyadmin).parameter(phpmyadmin_destination).default" value="htdocs" />

        <setInstallerVariable name="component(phpmyadmin).parameter(phpmyadmin_root).value" value="administrator" />
        <setInstallerVariable name="component(phpmyadmin).parameter(phpmyadmin_root).ask" value="no" /> 

		<setInstallerVariable name="component(phpmyadmin).parameter(phpmyadminpasswd).value" value="" />
		<setInstallerVariable name="component(phpmyadmin).parameter(phpmyadminpasswd).ask" value="yes" />
		<setInstallerVariable name="component(phpmyadmin).parameter(phpmyadminpasswd).title" value="phpMyAdmin Password" />
		<setInstallerVariable name="component(phpmyadmin).parameter(phpmyadminpasswd).description" value="Password" />
		<setInstallerVariable name="component(phpmyadmin).parameter(phpmyadminpasswd).explanation" value="Initial access password for the MySQL management tool phpMyAdmin. 
The username will be 'administrator'." />

        <setInstallerVariable name="mssql_installtype_options" value="bundledAndExisting" />

        <setInstallerVariable name="component(mssql).parameter(mssql_installtype).ask" value="yes" />
        <setInstallerVariable name="component(mssql).parameter(mssql_installtype).default" value="bundled" />
        <setInstallerVariable name="component(mssql).parameter(mssql_installtype).value" value="bundled" />

        <setInstallerVariable name="component(mssql).parameter(mssql_db_data).parameter(mssql_db_name).value" value="sugarcrm_db" />
        <setInstallerVariable name="component(mssql).parameter(mssql_db_data).parameter(mssql_db_user).value" value="sugarcrm_user" />
        <setInstallerVariable name="component(mssql).parameter(mssql_db_data).parameter(mssql_db_name).description" value="SugarCRM DB Name" />
        <setInstallerVariable name="component(mssql).parameter(mssql_db_data).parameter(mssql_db_user).description" value="SugarCRM DB User Name" />
        <setInstallerVariable name="component(mssql).parameter(mssql_db_data).parameter(mssql_db_user_password).description" value="SugarCRM DB User Password" />

        <setInstallerVariable name="component(mssql).parameter(mssql_db_data).parameter(mssql_db_user).ask" value="no" />
        <setInstallerVariable name="component(mssql).parameter(mssql_db_data).parameter(mssql_db_user_password).ask" value="no" />

        <setInstallerVariable name="component(iis).parameter(iis_virtualdir_name).title" value="Website Name" />
        <setInstallerVariable name="component(iis).parameter(iis_virtualdir_name).description" value="Website Name" />
        <setInstallerVariable name="component(iis).parameter(iis_virtualdir_name).explanation" value="Please enter the website name which will be used by IIS, i.e. www.mydomain.com/[website name]" />
        <setInstallerVariable name="component(iis).parameter(iis_virtualdir_name).value" value="sugarcrm" />
        <setInstallerVariable name="component(iis).parameter(iis_virtualdir_name).default" value="sugarcrm" />
		<setInstallerVariable name="component(iis).parameter(iis_server_domainname).title" value="Web Server Domain" />
        <setInstallerVariable name="component(iis).parameter(iis_server_domainname).description" value="Web Server domain" />
		<setInstallerVariable name="component(iis).parameter(iis_server_domainname).explanation" value="" />


    </preBuildActionList> 	


    <initializationActionList>
        
      <setInstallerVariable name="sugarinstall" value="spro" />

      <setInstallerVariable name="product_fullname" value="SugarCRM on Faststack WAMPStack" >
	  <ruleList>	
	      <platformTest type="windows" />
	      <compareText text="${mssql_iis_mode}" logic="equals" value="0" />
	  </ruleList>		
      </setInstallerVariable>	
      <setInstallerVariable name="product_fullname" value="Windows SQL Server Stack" >
	  <ruleList>	
	      <platformTest type="windows" />
	      <compareText text="${mssql_iis_mode}" logic="equals" value="1" />
	  </ruleList>		
      </setInstallerVariable>	

      <setInstallerVariable name="product_fullname" value="SugarCRM on Faststack LAMPStack" >
	  <ruleList>
	      <platformTest type="linux" />
	  </ruleList>	    
      </setInstallerVariable>	
      <setInstallerVariable name="product_fullname" value="SugarCRM on Faststack MAMPStack" >
	  <ruleList>	
	      <platformTest type="osx" />
	  </ruleList>		
      </setInstallerVariable>	
      <setInstallerVariable name="product_fullname" value="SugarCRM on Faststack SAMPStack" >
	  <ruleEvaluationLogic>or</ruleEvaluationLogic>
	  <ruleList>	
	      <platformTest type="solaris" />
	  </ruleList>		
      </setInstallerVariable>	


	<actionGroup>
	    <actionList>
		<setInstallerVariable name="db_server" value="mysql" />
		<componentSelection>
		    <deselect>iis,phpiis,mssql,phpmssql</deselect>
		</componentSelection>
	    </actionList>
	    <ruleList>	
		<compareText text="${mssql_iis_mode}" logic="equals" value="0" />
	    </ruleList>
	</actionGroup>

	<actionGroup>
	    <actionList>
		<setInstallerVariable name="db_server" value="mssql" />
		<componentSelection>
		    <deselect>phpmyadmin,mysqlshortcuts,mysqlapache</deselect>
		</componentSelection>
		<registryGet name="MajorVersion" key="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\InetStp" variable="iis_major_version">
		    <showMessageOnError>0</showMessageOnError>
		    <abortOnError>1</abortOnError>
		</registryGet>
		<actionGroup>
		    <actionList>
			<setInstallerVariable name="http_server" value="apache" />
			<componentSelection>
			    <deselect>apache,apachephp,iis,iisphp</deselect>
			</componentSelection>
			<componentSelection>
			    <select>${http_server},${http_server}php</select>
			</componentSelection>
		    </actionList>
		    <ruleList>	
			<compareText text="${iis_major_version}" logic="equals" value="" />
		    </ruleList>		
		</actionGroup>
	    </actionList>
	    <ruleList>	
		<compareText text="${mssql_iis_mode}" logic="equals" value="1" />
	    </ruleList>
	</actionGroup>
	<componentSelection>
	    <deselect>mysql,mysqlphp,mssql,mssqlphp</deselect>
	</componentSelection>
	<componentSelection>
	    <select>${db_server},${db_server}php</select>
	</componentSelection>
	
	<setInstallerVariable name="web_server_virtualdir_name" value="sugarcrm" persist="1" />

    </initializationActionList> 

    <readyToInstallActionList>
        <setInstallerVariable name="component(iis).parameter(iis_virtualdir).value" value="${installdir}\htdocs\sugarcrm" />
    </readyToInstallActionList>

    <preInstallationActionList>
    </preInstallationActionList>
    
    
	<componentList>		

		<component>
			<name>apacheshortcuts</name>
			<description>Apache Shortcuts</description>
			<canBeEdited>0</canBeEdited>
			<detailedDescription></detailedDescription>
            <selected>1</selected>
			<show>0</show>

			<startMenuShortcutList>
				<startMenuFolder>
					<name>Run SugarCRM</name>
					<platforms>windows</platforms>
					<startMenuShortcutList>
						<startMenuFolder>
							<name>Apache</name>
							<platforms>windows</platforms>
							<startMenuShortcutList>
								<startMenuShortcut>
									<comment>Start Apache</comment>
									<name>Start Apache</name>
									<windowsExec>${installdir}/bin/runctl.bat</windowsExec>
									<windowsExecArgs>apache start</windowsExecArgs>
									<windowsIcon>${installdir}/images/apache.ico</windowsIcon>
									<windowsPath>${installdir}/</windowsPath>
								</startMenuShortcut>
								<startMenuShortcut>
									<comment>Stop Apache</comment>
									<name>Stop Apache</name>
									<windowsExec>${installdir}/bin/runctl.bat</windowsExec>
									<windowsExecArgs>apache stop</windowsExecArgs>
									<windowsIcon>${installdir}/images/apache.ico</windowsIcon>
									<windowsPath>${installdir}/</windowsPath>
								</startMenuShortcut>
								<startMenuShortcut>
									<comment>Restart Apache</comment>
									<name>Restart Apache</name>
									<windowsExec>${installdir}/bin/runctl.bat</windowsExec>
									<windowsExecArgs>apache restart</windowsExecArgs>
									<windowsIcon>${installdir}/images/apache.ico</windowsIcon>
									<windowsPath>${installdir}/</windowsPath>
								</startMenuShortcut>
							</startMenuShortcutList>
						</startMenuFolder>
					</startMenuShortcutList>
				</startMenuFolder>
			</startMenuShortcutList>
		</component>

		<component>
			<name>mysqlshortcuts</name>
			<description>MySQL Shortcuts</description>
			<canBeEdited>0</canBeEdited>
			<detailedDescription></detailedDescription>
            <selected>1</selected>
			<show>0</show>

			<startMenuShortcutList>
				<startMenuFolder>
					<name>Run SugarCRM</name>
					<platforms>windows</platforms>
					<startMenuShortcutList>
						<startMenuFolder>
							<name>MySQL</name>
							<platforms>windows</platforms>
							<startMenuShortcutList>
								<startMenuShortcut>
									<comment>Start MySQL</comment>
									<name>Start MySQL</name>
									<windowsExec>${installdir}/bin/runctl.bat</windowsExec>
									<windowsExecArgs>mysql start</windowsExecArgs>
									<windowsIcon>${installdir}/images/mysql.ico</windowsIcon>
									<windowsPath>${installdir}/</windowsPath>
								</startMenuShortcut>
								<startMenuShortcut>
									<comment>Stop MySQL</comment>
									<name>Stop MySQL</name>
									<windowsExec>${installdir}/bin/runctl.bat</windowsExec>
									<windowsExecArgs>mysql stop</windowsExecArgs>
									<windowsIcon>${installdir}/images/mysql.ico</windowsIcon>
									<windowsPath>${installdir}/</windowsPath>
								</startMenuShortcut>
								<startMenuShortcut>
									<comment>Restart MySQL</comment>
									<name>Restart MySQL</name>
									<windowsExec>${installdir}/bin/runctl.bat</windowsExec>
									<windowsExecArgs>mysql restart</windowsExecArgs>
									<windowsIcon>${installdir}/images/mysql.ico</windowsIcon>
									<windowsPath>${installdir}/</windowsPath>
								</startMenuShortcut>
							</startMenuShortcutList>
						</startMenuFolder>
					</startMenuShortcutList>
				</startMenuFolder>
			</startMenuShortcutList>
		</component>        

		<component>
			<name>serviceshortcuts</name>
			<description>Service Shortcuts</description>
			<canBeEdited>0</canBeEdited>
			<detailedDescription></detailedDescription>
            <selected>1</selected>
			<show>0</show>

			<startMenuShortcutList>
				<startMenuFolder>
					<name>Run SugarCRM</name>
					<platforms>windows</platforms>
					<startMenuShortcutList>

				<startMenuFolder>
					<name>SugarCRM Service</name>
					<platforms>windows</platforms>
					<startMenuShortcutList>
						<startMenuShortcut>
							<comment>Install ${product_fullname} as service</comment>
							<name>Install ${product_fullname} as service</name>
							<windowsExec>${installdir}/bin/serviceinstall.bat</windowsExec>
							<windowsExecArgs>INSTALL</windowsExecArgs>
							<windowsIcon>${installdir}/images/sugarcrm.ico</windowsIcon>
							<windowsPath>${installdir}/</windowsPath>
						</startMenuShortcut>
						<startMenuShortcut>
							<comment>Start ${product_fullname} service</comment>
							<name>Start ${product_fullname} service</name>
							<windowsExec>${installdir}/bin/servicerun.bat</windowsExec>
							<windowsExecArgs>START</windowsExecArgs>
							<windowsIcon>${installdir}/images/sugarcrm.ico</windowsIcon>
							<windowsPath>${installdir}/</windowsPath>
						</startMenuShortcut>
						<startMenuShortcut>
							<comment>Stop ${product_fullname} service</comment>
							<name>Stop ${product_fullname} service</name>
							<windowsExec>${installdir}/bin/servicerun.bat</windowsExec>
							<windowsExecArgs>STOP</windowsExecArgs>
							<windowsIcon>${installdir}/images/sugarcrm.ico</windowsIcon>
							<windowsPath>${installdir}/</windowsPath>
						</startMenuShortcut>
						<startMenuShortcut>
							<comment>Uninstall ${product_fullname} service</comment>
							<name>Uninstall ${product_fullname} service</name>
							<windowsExec>${installdir}/bin/serviceinstall.bat</windowsExec>
							<windowsExecArgs>REMOVE</windowsExecArgs>
							<windowsIcon>${installdir}/images/sugarcrm.ico</windowsIcon>
							<windowsPath>${installdir}/</windowsPath>
						</startMenuShortcut>
					</startMenuShortcutList>
				</startMenuFolder>


					</startMenuShortcutList>
				</startMenuFolder>
			</startMenuShortcutList>
		</component>        

		<component>
			<name>default</name>
			<description>SugarCRM</description>
			<canBeEdited>0</canBeEdited>
			<detailedDescription>The SugarCRM main program files. This component is required and it will always be installed.</detailedDescription>
            <selected>1</selected>
			<show>1</show>
            <desktopShortcutList>
				<fileShortcut>
                    <comment>Faststack SugarCRMStack Installation Directory</comment>
                    <filePath>${installdir}/</filePath>
                    <icon>${installdir}/htdocs/sugar.gif</icon>
                    <name>SugarCRM</name>
                    <platforms>linux solaris-intel solaris-sparc</platforms>
                    <windowsIcon></windowsIcon>
                </fileShortcut>
            </desktopShortcutList>
            
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesunix</name>
                    <platforms>linux osx solaris-intel solaris-sparc</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>common</origin>
                        </distributionDirectory>
                        <distributionFile>
                            <origin>sugarctl.sh</origin>
                        </distributionFile>
                    </distributionFileList>
                    <actionList>
                        <changePermissions>
                            <files>${installdir}/sugarctl.sh</files>
                            <permissions>700</permissions>				
                        </changePermissions>					
                    </actionList>
                </folder>
	    
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <actionList>
                        <actionGroup>
							<actionList>
								<changePermissions>
									<files>*/cache*;*/data*;*/custom*;*/modules*;*/config.php</files>
									<permissions>777</permissions>
								</changePermissions>
							</actionList>
							<ruleList>
								<platformTest type="unix" />
							</ruleList>
						</actionGroup>
								
<!--						<substitute>
							<files>*/apachectl;*/conf/*.conf;*/build-defs.h;*/apxs;*/apr-config;*/apu-config;*/bin/envvars;*/bin/envvars-std;*/build/config*;lib/libapr*.la;*/pearcmd.php;*/pear.conf;*/build-defs.h;*/etc/php.ini;*/bin/pear;*/bin/phpize;*/bin/php-config;*/bin/php;*.la;*.mk;*/*.h</files>
							<substitutionList>
								<substitution>
									<pattern>@@BITROCK_PHP_ROOTDIR@@</pattern>
									<value>${installdir}/php</value>
								</substitution>
								<substitution>
									<pattern>@@BITROCK_APACHE_ROOTDIR@@</pattern>
									<value>${installdir}/apache2</value>
								</substitution>
								<substitution>
									<pattern>@@BITROCK_COMMON_ROOTDIR@@</pattern>
									<value>${installdir}/common</value>
								</substitution>
							</substitutionList>
							<ruleList>
								<platformTest type="unix" />
							</ruleList>
						</substitute>
-->
					</actionList>
					
					<distributionFileList>
						<distributionDirectory>
							<origin>licenses</origin>
						</distributionDirectory>
					</distributionFileList>
				</folder>

				<folder>
					<description>Program Files</description>
					<destination>${installdir}</destination>
					<name>programfileswindows</name>
					<platforms>windows</platforms>
					<actionList>
						<substitute>
							<files>*/allctl.bat;*/serviceinstall.bat;*/servicerun.bat;*/runctl.bat</files>
							<type>regexp</type>
							<substitutionList>
								<substitution>
									<pattern>@@BITROCK_APACHE_ROOTDIR@@</pattern>
									<value>${installdir.dos}\apache2</value>
								</substitution>
								<substitution>
									<pattern>@@BITROCK_MYSQL_ROOTDIR@@</pattern>
									<value>${installdir.dos}\mysql</value>
								</substitution>
								<substitution>
									<pattern>@@BITROCK_PRODUCT_SHORTNAME@@</pattern>
									<value>${product_shortname}</value>
								</substitution>
							</substitutionList>
						</substitute>
					</actionList>
					<distributionFileList>
						<distributionDirectory>
							<origin>bin</origin>
						</distributionDirectory>
						<distributionDirectory>
							<origin>images</origin>
						</distributionDirectory>
					</distributionFileList>
				</folder>
			
				<folder destination="${installdir}" name="htdocs">
					<distributionFileList>
						<distributionDirectory origin="htdocs" />
					</distributionFileList>
				</folder>
						
				<folder destination="${installdir}/htdocs" name="sugarcrm">
					<distributionFileList>
						<distributionDirectory origin="sugarcrm" />
					</distributionFileList>						
					<actionList>
					  <actionGroup>
					    <actionList>
					      <changeOwnerAndGroup>
						<files>*</files>
						<owner>nobody</owner>
						<ruleEvaluationLogic>or</ruleEvaluationLogic>
						<ruleList>
						  <platformTest type="linux" />
						  <platformTest type="solaris" />
						</ruleList>
					      </changeOwnerAndGroup>					
					    </actionList>		
					    <ruleList>
					      <compareText text="${installer_root_install}" logic="equals" value="1"/>
					    </ruleList>
					  </actionGroup>
					</actionList>
				</folder>				
					   
				<folder destination="${installdir}" name="images" platforms="windows">
					<distributionFileList>
						<distributionDirectory origin="images" />
					</distributionFileList>
				</folder>
				
				<folder destination="${installdir}" name="tmp" platforms="osx">
					<actionList>
						<setInstallerVariable>
							<name>systemuser</name>
							<value>${env(USER)}</value>
						</setInstallerVariable>
						<substitute>
							<files>*/Sugarcrm</files>
							<type>regexp</type>
							<substitutionList>
								<substitution>
									<pattern>@@BITROCK_INSTALLDIR@@</pattern>
									<value>${installdir}</value>
								</substitution>
								<substitution>
									<pattern>@@BITROCK_MACUSER@@</pattern>
									<value>${systemuser}</value>
								</substitution>
							</substitutionList>
						</substitute>
					</actionList>
					<distributionFileList>
						<distributionDirectory origin="tmp" />
					</distributionFileList>
				</folder>
			</folderList>


			<startMenuShortcutList>
				<startMenuLinkShortcut>
					<comment>SugarCRM Website</comment>
					<name>SugarCRM Website</name>
					<url>http://www.sugarcrm.com</url>
					<windowsIcon></windowsIcon>
				</startMenuLinkShortcut>
				<startMenuLinkShortcut>
					<comment>Start Here</comment>
					<name>Start Here</name>
					<url>http://127.0.0.1:${web_server_port}/sugarcrm/index.php</url>
					<windowsIcon>${installdir}/images/sugarcrm.ico</windowsIcon>
				</startMenuLinkShortcut>
				<startMenuShortcut>
					<comment>Uninstall ${product_fullname}</comment>
					<name>Uninstall ${product_fullname}</name>
					<windowsExec>${installdir}\uninstall.exe</windowsExec>
					<windowsExecArgs></windowsExecArgs>
					<windowsIcon></windowsIcon>
					<windowsPath>${installdir}</windowsPath>
				</startMenuShortcut>
			</startMenuShortcutList>


			<postInstallationActionList>
                <substitute>
                    <files>${installdir}/sugarctl.sh;${installdir}/common/scripts/sugarcrm;${installdir}/common/bin/openssl;${installdir}/php/bin/php;${installdir}/php/bin/php-config;${installdir}/mysql/my.cnf</files>
                    <type>exact</type>
                    <substitutionList>
                        <substitution>
                            <pattern>@@BITROCK_INSTALLDIR@@</pattern>
                            <value>${installdir.unix}</value>
                        </substitution>		
                        <substitution>
                            <pattern>@@BITROCK_COMMON_ROOTDIR@@</pattern>
                            <value>${installdir}/common</value>
                        </substitution>				
                        <substitution>
                            <pattern>@@BITROCK_MYSQL_ROOTDIR@@</pattern>
                            <value>${installdir.unix}/mysql</value>
                        </substitution>
                        <substitution>
                            <pattern>@@BITROCK_PHP_ROOTDIR@@</pattern>
                            <value>${installdir.unix}/php</value>
                        </substitution>
                        <substitution>
                            <pattern>@@BITROCK_MYSQL_PORT@@</pattern>
                            <value>${mysql_port}</value>
                        </substitution>
                        <substitution>
                            <pattern>@@BITROCK_MYSQL_PASSWORD@@</pattern>
                            <value>${mysql_root_password}</value>
                        </substitution>
                        <substitution>
                            <pattern>@@BITROCK_APACHE_ROOTDIR@@</pattern>
                            <value>${installdir.unix}/apache2</value>
                        </substitution>
                        <substitution>
                            <pattern>@@BITROCK_APACHE_PORT@@</pattern>
                            <value>${apache_server_port}</value>
                        </substitution>					
                    </substitutionList>
                    <ruleList>	
                        <platformTest type="unix" />
                    </ruleList>								                    
                </substitute>
                <substitute>
                    <files>${installdir}/sugarctl.sh</files>
                    <type>exact</type>
                    <substitutionList>
                        <substitution>
                            <pattern>LD_LIBRARY_PATH</pattern>
                            <value>DYLD_LIBRARY_PATH</value>
                        </substitution>		
                    </substitutionList>
                    <ruleList>	
                        <platformTest type="osx" />
                    </ruleList>								                    
                </substitute>
            </postInstallationActionList>
		</component>

	<include file="apache.xml"/>		
	<include file="php.xml"/>
        <include file="mysql.xml" />
        <include file="phpmyadmin.xml" />
        <include file="apache-php.xml" />
        <include file="mysql-php.xml" />

	<!-- mssql_iis_mode == 0 -->
        <include file="mysql-apache.xml" />

	<!-- mssql_iis_mode == 1 -->
	<include file="mssql.xml" />
	<include file="iis.xml" />
	<include file="php-mssql.xml" />

	</componentList>

    <customLanguageFileList/>
    <fileList/>
    <finalPageActionList/>
    <parameterList>

        <booleanParameter>
            <name>mssql_iis_mode</name>
            <title>MSSQL IIS mode</title>
            <value></value>
            <default>0</default>
            <ask>0</ask>
	</booleanParameter>

        <choiceParameter>
            <name>http_server</name>
            <title>Web Server</title>
            <description/>
            <insertBefore>installdir</insertBefore>
            <explanation>Which Web server would you like to use:</explanation>
            <value/>
            <default>apache</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>1</ask>
            <cliOptionName>http_server</cliOptionName>
            <displayType>radiobuttons</displayType>
            <leftImage/>
            <width>40</width>
            <optionList>
                <option>
                    <text>Apache HTTP Server (additional 12 MB)</text>
                    <value>apache</value>
                </option>
                <option>
                    <text>Microsoft IIS Server</text>
                    <value>iis</value>
                </option>
            </optionList>
            <preShowPageActionList>
				<componentSelection>
					<deselect>apache,apachephp,iis,iisphp,apacheshortcuts,serviceshortcuts</deselect>
				</componentSelection>
			</preShowPageActionList>
			<postShowPageActionList>
				<componentSelection>
					<select>${http_server},${http_server}php</select>
				</componentSelection>
				<componentSelection>
					<select>apacheshortcuts,serviceshortcuts</select>
					<ruleList>
						<compareText text="${http_server}" logic="equals" value="apache" />
					</ruleList>
				</componentSelection>
			</postShowPageActionList>
            <validationActionList>
				<throwError>
					<text>This version of IIS is not supported. It must be version 6 or higher.</text>
					<ruleList>
						<compareValues value1="${iis_major_version}" logic="less" value2="6" />
						<compareText text="${http_server}" logic="equals" value="iis" />
					</ruleList>
				</throwError>
				<actionGroup>
					<actionList>
						<logMessage>
							<text>You have to have administrator permissions to configure IIS Web Server.</text>
						</logMessage>                 
						<throwError>
							<text>You have to have administrator permissions to configure IIS Web Server.</text>
						</throwError>
					</actionList>
					<ruleList>
						<compareText text="${installer_is_root_install}" logic="does_not_equal" value="1" />
						<compareText text="${http_server}" logic="equals" value="iis" />
					</ruleList>
				</actionGroup>
				<actionGroup>
					<actionList>
						<logMessage>
							<text>We cannot read the IIS configuration file: ${env(SystemRoot)}\system32\inetsrv\MetaBase.xml.</text>
						</logMessage>                 
						<throwError>
							<text>We cannot read the IIS configuration file: ${env(SystemRoot)}\system32\inetsrv\MetaBase.xml.</text>
						</throwError>
					</actionList>
					<ruleList>
						 <compareValues value1="${iis_major_version}" logic="less" value2="7" />
		                                <compareValues value1="${iis_major_version}" logic="greater" value2="5" />
						<fileTest path="${env(SystemRoot)}\system32\inetsrv\MetaBase.xml" condition="not_readable" />
						<compareText text="${installer_is_root_install}" logic="equals" value="1" />
						<compareText text="${http_server}" logic="equals" value="iis" />
					</ruleList>
				</actionGroup>
				<actionGroup>
					<actionList>
						<logMessage>
							<text>We cannot write to the IIS configuration file: ${env(SystemRoot)}\system32\inetsrv\MetaBase.xml.</text>
						</logMessage>                 
						<throwError>
							<text>We cannot write to the IIS configuration file: ${env(SystemRoot)}\system32\inetsrv\MetaBase.xml.</text>
						</throwError>
					</actionList>
					<ruleList>
						 <compareValues value1="${iis_major_version}" logic="less" value2="7" />
		                                <compareValues value1="${iis_major_version}" logic="greater" value2="5" />
						<fileTest path="${env(SystemRoot)}\system32\inetsrv\MetaBase.xml" condition="not_writable" />
						<compareText text="${installer_is_root_install}" logic="equals" value="1" />
						<compareText text="${http_server}" logic="equals" value="iis" />
					</ruleList>
				</actionGroup>
				<actionGroup>
					<actionList>
						<registryGet name="ISAPIFilter" key="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\InetStp\Components" variable="iis_isapi_filter" />
						<registryGet name="ISAPIExtensions" key="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\InetStp\Components" variable="iis_isapi_extensions" />
						<registryGet name="NetFxExtensibility" key="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\InetStp\Components" variable="iis_isapi_netextensibility" />

					<actionGroup>
					<actionList>
						<logMessage>
							<text>Net Extensions, ISAPIExtensions and ISAPIFilters must be installed.</text>
						</logMessage>                 
						<throwError>
							<text>Net Extensions, ISAPIExtensions and ISAPIFilters must be installed. Please run "start /w pkgmgr.exe /iu:IIS-NetFxExtensibility;IIS-ISAPIExtensions;IIS-ISAPIFilter" from a console or install them using the "Turn Windows features on or off" graphic tool.</text>
						</throwError>
					</actionList>
					<ruleList>
		                                <compareValues value1="${iis_major_version}" logic="greater" value2="6" />
						<compareText text="${installer_is_root_install}" logic="equals" value="1" />
						<compareText text="${http_server}" logic="equals" value="iis" />
						<ruleGroup>
						<ruleEvaluationLogic>or</ruleEvaluationLogic>
						<ruleList>
							<compareText text="${iis_isapi_filter}" logic="equals" value="" />
							<compareText text="${iis_isapi_extensions}" logic="equals" value="" />
							<compareText text="${iis_isapi_netextensibility}" logic="equals" value="" />
						</ruleList>
						</ruleGroup>
					</ruleList>
					</actionGroup>
					</actionList>
				</actionGroup>
				<actionGroup>
					<actionList>
						<logMessage>
							<text>We cannot read the IIS configuration file: ${env(SystemRoot)}\system32\inetsrv\config\applicationHost.config.</text>
						</logMessage>                 
						<throwError>
							<text>We cannot read the IIS configuration file: ${env(SystemRoot)}\system32\inetsrv\config\applicationHost.config.</text>
						</throwError>
					</actionList>
					<ruleList>
		                                <compareValues value1="${iis_major_version}" logic="greater" value2="6" />
						<fileTest path="${env(SystemRoot)}\system32\inetsrv\config\applicationHost.config" condition="not_readable" />
						<compareText text="${installer_is_root_install}" logic="equals" value="1" />
						<compareText text="${http_server}" logic="equals" value="iis" />
					</ruleList>
				</actionGroup>
				<actionGroup>
					<actionList>
						<logMessage>
							<text>We cannot write to the IIS configuration file: ${env(SystemRoot)}\system32\inetsrv\config\applicationHost.config.</text>
						</logMessage>                 
						<throwError>
							<text>We cannot write to the IIS configuration file: ${env(SystemRoot)}\system32\inetsrv\config\applicationHost.config.</text>
						</throwError>
					</actionList>
					<ruleList>
		                                <compareValues value1="${iis_major_version}" logic="greater" value2="6" />
						<fileTest path="${env(SystemRoot)}\system32\inetsrv\config\applicationHost.config" condition="not_writable" />
						<compareText text="${installer_is_root_install}" logic="equals" value="1" />
						<compareText text="${http_server}" logic="equals" value="iis" />
					</ruleList>
				</actionGroup>
			</validationActionList>
			<ruleList>	
				<compareText text="${mssql_iis_mode}" logic="equals" value="1" />
				<compareText text="${iis_major_version}" logic="does_not_equal" value="" />
			</ruleList>		
        </choiceParameter>

        <directoryParameter>
            <name>installdir</name>
            <title></title>
            <description>Installation directory</description>
            <explanation>Please specify the directory where ${product_fullname} will be installed</explanation>
			<value>${platform_install_prefix}/${product_shortname}-${product_version}</value>
            <default>${platform_install_prefix}/${product_shortname}-${product_version}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <leftImage></leftImage>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
            <validationActionList>
                <throwError>
                    <text>The directory ${installdir.unix}/mysql/ contains a SugarCRM database from a previous installation. Please remove it or choose a new installation directory.</text>
                    <ruleList>
                        <fileTest path="${installdir}/mysql/data/sugarcrm" condition="is_directory" />
                    </ruleList>
                </throwError>		
            </validationActionList>	    
        </directoryParameter>
        <stringParameter>
            <name>systemname</name>
            <title>System Name</title>
            <description>System Name</description>
            <explanation>This will be displayed in the Title Bar of users who visit this SugarCRM installation</explanation>
            <value>127.0.0.1</value>
            <default>127.0.0.1</default>
            <allowEmptyValue>1</allowEmptyValue>
            <ask>1</ask>
            <cliOptionName>System Name</cliOptionName>
            <leftImage></leftImage>
            <width>40</width>
        </stringParameter>
        
		<passwordParameter>
			<name>sugarpassword</name>
			<title>SugarCRM Admin Password</title>
			<description>Password</description>
			<explanation>Password for the SugarCRM admin user. The administration user will be 'admin'</explanation> 
			<value></value>
			<default></default>
			<allowEmptyValue>0</allowEmptyValue>
			<ask>yes</ask>
			<cliOptionName></cliOptionName>
			<descriptionRetype>Re-enter</descriptionRetype>
			<leftImage></leftImage>
			<width>40</width>
			<validationActionList>
				<throwError>
					<text>You need to provide a non-empty password</text>
					<ruleList>
						<compareText text="${sugarpassword}" logic="equals" value="" />
					</ruleList>
				</throwError>
			</validationActionList>
		</passwordParameter>
		
		<booleanParameter>
			<name>demo</name>
			<default>1</default>
			<title>Demo data</title>
			<value>0</value>
			<ask>1</ask>
			<description>Populate with demo data?</description>
			<explanation>Populate SugarCRM database with demo data? 
This process may take several minutes to complete.</explanation>
		</booleanParameter>
		
		<stringParameter>
			<name>slkeyusers</name>
			<default>1</default>
			<title>Key Users</title>
			<ask>1</ask>
			<description>Number of users</description>
			<explanation>Please enter the number or users of your license key.</explanation>
			<ruleList>
				<compareText text="${sugarinstall}" logic="equals" value="spro" />
			</ruleList>
		</stringParameter>
		
		<stringParameter>
			<name>slkeyexpiredate</name>
			<default>2010-12-12</default>
			<title>License Key Expire Date</title>
			<ask>1</ask>
			<description>Expire Date</description>
			<explanation>Please enter the license key expire date.</explanation>
			<ruleList>
				<compareText text="${sugarinstall}" logic="equals" value="spro" />
			</ruleList>
		</stringParameter>
		
		<stringParameter>
			<name>slkey</name>
			<default>sugar</default>
			<title>License Key</title>
			<ask>1</ask>
			<description>License Key for sugarCRM</description>
			<explanation>Please enter the license key.</explanation>
			<ruleList>
				<compareText text="${sugarinstall}" logic="equals" value="spro" />
			</ruleList>
		</stringParameter>
        <stringParameter>
            <name>slkey_oc_licenses</name>
            <title>Offline Client Licenses</title>
            <description>Offline Client Licenses</description>
            <explanation>Please enter the number of purchased Offline Clients</explanation>
            <value>0</value>
            <default>0</default>
            <allowEmptyValue>1</allowEmptyValue>
            <ask>1</ask>
            <cliOptionName></cliOptionName>
            <leftImage></leftImage>
            <width>30</width>
            <ruleList>
                <compareText logic="equals" text="${sugarinstall}" value="spro">
                    <nocase>0</nocase>
                </compareText>
            </ruleList>
        </stringParameter>		
		<booleanParameter>
			<name>installAsService</name>
			<title>Install as a service</title>
			<description>Install service</description>
			<explanation>You can optionally register ${product_fullname} as a service. This way it will automatically be started every time the machine is started. Install ${product_fullname} as a service?.</explanation>
			<value>1</value>
			<default>0</default>
			<ask>1</ask>
			<cliOptionName></cliOptionName>
			<leftImage></leftImage>
			<ruleEvaluationLogic>or</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="windows" />
				<platformTest type="osx" />
				<ruleGroup>
					<ruleEvaluationLogic>and</ruleEvaluationLogic>
					<ruleList>
						<compareText text="${installer_root_install}" logic="equals" value="1" />
						<platformTest type="unix" />
					</ruleList>
				</ruleGroup>
 			</ruleList>
		</booleanParameter>


		
		<passwordParameter>
			<name>sudopass</name>
			<default></default>
			<title>Administrator Password</title>
			<ask>1</ask>
			<description>Administrator Password</description>
			<explanation>Please enter the Administrator Password.</explanation>
			<descriptionRetype>Re-enter</descriptionRetype>
			<ruleEvaluationLogic>and</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="osx" />
				<compareText text="${installAsService}" logic="equals" value="1" />
				<!--<compareText text="${installer_root_install}" logic="equals" value="1" />-->
			</ruleList>
			<validationActionList>
				<throwError>
					<text>You need to provide a non-empty password</text>
					<ruleList>
						<compareText text="${sudopass}" logic="equals" value="" />
					</ruleList>
				</throwError>
                              <actionGroup>
				    <abortOnError>0</abortOnError>
				    <showMessageOnError>0</showMessageOnError>
				    <actionList>
					  <setInstallerVariable name="sudopass_valid" value="0" />
					  <runProgram>
					        <program>echo</program>                
						<programArguments>'${sudopass}' | sudo -S ls</programArguments>
					  </runProgram>
					  <setInstallerVariable name="sudopass_valid" value="1" />
				    </actionList>
                              </actionGroup>
			      <throwError>
				    <text>The administrator password is not valid. Please re-enter the password.</text>
				    <ruleList>
				        <compareText text="${sudopass_valid}" logic="does_not_equal" value="1" />
				    </ruleList>
                              </throwError>

			</validationActionList>
		</passwordParameter>
		
	</parameterList>
    
    <!-- SugarCRM configuration -->

    <postInstallationActionList>
     
        <substitute>
            <files>${php_directory}/php.ini;${php_directory}/php.ini-recommended</files>
            <substitutionList>        
                <substitution>
                    <pattern>open_basedir =</pattern>
                    <value>;open_basedir =</value> 
                    <ruleList>
                        <platformTest type="windows" />
                    </ruleList>								
                </substitution>			
            </substitutionList>
        </substitute>
        
        <setInstallerVariable name="setup_db_host_name" value="${database_hostname}, ${database_port}" persist="1" >
            <ruleList>
                <compareText text="${db_server}" logic="equals" value="mssql" />
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable name="setup_db_host_name" value="${database_hostname}" persist="1" >
            <ruleList>
                <compareText text="${db_server}" logic="equals" value="apache" />
            </ruleList>
        </setInstallerVariable>

        <setInstallerVariable name="setup_db_create_database" value="1" persist="1" />
        <setInstallerVariable name="setup_db_root_user" value="${database_root_user}" persist="1" />
        <setInstallerVariable name="setup_db_root_password" value="${database_root_password}" persist="1" />
		<setInstallerVariable name="database_instance" value="" persist="1" />
		<setInstallerVariable name="setup_db_drop_tables" value="0" persist="1" />
        <actionGroup>
			<actionList>
				<actionGroup>
					<actionList>
						<setInstallerVariable name="setup_db_host_name" value="${env(COMPUTERNAME)}" persist="1" />
						<setInstallerVariable name="setup_db_host_instance" value="${mssql_instance}" persist="1" />
<!--
						<setInstallerVariable name="setup_db_create_database" value="0" persist="1" />
						<setInstallerVariable name="setup_db_root_user" value="${database_db_user}" persist="1" />
						<setInstallerVariable name="setup_db_root_password" value="${database_db_password}" persist="1" />
-->
						<setInstallerVariable name="setup_db_create_database" value="1" persist="1" />
						<setInstallerVariable name="setup_db_root_user" value="${database_root_user}" persist="1" />
						<setInstallerVariable name="setup_db_root_password" value="${database_root_password}" persist="1" />
					</actionList>
					<ruleList>
						<compareText text="${mssql_installtype}" logic="equals" value="bundled" />
					</ruleList>
				</actionGroup>
				<actionGroup>
					<actionList>
						<setInstallerVariable name="setup_db_host_name" value="${env(COMPUTERNAME)}" persist="1" />
						<setInstallerVariable name="setup_db_host_instance" value="${mssql_instance}" persist="1" />
						<setInstallerVariable name="setup_db_create_database" value="1" persist="1" />
						<setInstallerVariable name="setup_db_root_user" value="${database_root_user}" persist="1" />
						<setInstallerVariable name="setup_db_root_password" value="${database_root_password}" persist="1" />
					</actionList>
					<ruleList>
						<compareText text="${mssql_installtype}" logic="equals" value="existing" />
						<compareText text="${mssql_connection}" logic="equals" value="local" />
					</ruleList>
				</actionGroup>
				<actionGroup>
					<actionList>
						<setInstallerVariable name="setup_db_host_name" value="${database_hostname}, ${database_port}" persist="1" />
						<setInstallerVariable name="setup_db_host_instance" value="" persist="1" />
						<setInstallerVariable name="setup_db_create_database" value="1" persist="1" />
						<setInstallerVariable name="setup_db_root_user" value="${database_root_user}" persist="1" />
						<setInstallerVariable name="setup_db_root_password" value="${database_root_password}" persist="1" />
					</actionList>
					<ruleList>
						<compareText text="${mssql_installtype}" logic="equals" value="existing" />
						<compareText text="${mssql_connection}" logic="equals" value="remote" />
					</ruleList>
				</actionGroup>
				<actionGroup>
					<actionList>
						<setInstallerVariable name="setup_db_create_database" value="0" persist="1" />
						<setInstallerVariable name="setup_db_drop_tables" value="1" persist="1" />
						<setInstallerVariable name="setup_db_root_user" value="${database_db_user}" persist="1" />
						<setInstallerVariable name="setup_db_root_password" value="${database_db_password}" persist="1" />
					</actionList>
					<ruleList>
						<compareText text="${mssql_installtype}" logic="equals" value="existing" />
						<compareText text="${mssql_db_type}" logic="equals" value="existing" />
					</ruleList>
				</actionGroup>

            </actionList>
            <ruleList>
				<compareText text="${db_server}" logic="equals" value="mssql" />
            </ruleList>
        </actionGroup>

        <writeFile>
            <path>${installdir}/htdocs/sugarcrm/config_si.php</path>
            <text>&lt;?php
    $sugar_config_si = array (
    'setup_db_host_name' => '${setup_db_host_name}',
    'setup_db_host_instance' => '${setup_db_host_instance}',
    'setup_db_database_name' => '${database_db_name}',
    'setup_db_drop_tables' => ${setup_db_drop_tables},
    'setup_db_create_database' => ${setup_db_create_database},
    'setup_db_create_sugarsales_user' => 0,
    'setup_db_admin_user_name' => '${setup_db_root_user}',
    'setup_db_admin_password' => '${setup_db_root_password}',
    'setup_db_sugarsales_user' => '${setup_db_root_user}',
    'setup_db_sugarsales_password' => '${setup_db_root_password}',
    'setup_db_type' => '${db_server}',
    'demoData' => '${demoData}',
    'setup_site_admin_user_name' => 'admin',
    'setup_site_admin_password' => '${sugarpassword}',
    'setup_license_key_users' => ${slkeyusers},
    'setup_license_key_expire_date' => '${slkeyexpiredate}',
	'setup_license_key_oc_licences' =&gt; ${slkey_oc_licenses},
    'setup_license_key' => '${slkey}',
    'setup_site_url' => 'http://${web_server_domainname}:${web_server_port}/sugarcrm',
    'setup_system_name' =&gt; '${systemname}',
    'default_currency_iso4217' => 'USD',
    'default_currency_name' => 'US Dollars',
    'default_currency_significant_digits' => '2',
    'default_currency_symbol' => '$',
    'default_date_format' => 'm/d/Y',
    'default_time_format' => 'h:ia',
    'default_decimal_seperator' => '.',
    'default_export_charset' => 'ISO-8859-1',
    'default_language' => 'en_us',
    'default_locale_name_format' => 's f l',
    'default_number_grouping_seperator' => ',',
    'export_delimiter' => ',',
    'setup_site_sugarbeet_automatic_checks' => true,
    );
    ?&gt; 
            </text>
        </writeFile>

        <addFilesToUninstaller files="${installdir}/htdocs/sugarcrm/config_si.php" />
	
	<actionGroup>
	  <actionList>
	        <runProgram>
			<program>touch</program>
			<programArguments>${installdir}/htdocs/sugarcrm/.htaccess</programArguments>
			<ruleEvaluationLogic>or</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="linux" />
				<platformTest type="solaris" />
			</ruleList>
		</runProgram>
		<changeOwnerAndGroup>
			<files>${installdir}/htdocs/sugarcrm/.htaccess</files>
			<owner>nobody</owner>
			<ruleEvaluationLogic>or</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="linux" />
				<platformTest type="solaris" />
			</ruleList>
		</changeOwnerAndGroup>
		<changePermissions>
			<files>${installdir}/htdocs/sugarcrm/config.php</files>
			<permissions>666</permissions>
			<ruleList>
				<platformTest type="unix" />
			</ruleList>
		</changePermissions>
	  </actionList>
	  <ruleList>
	    <compareText text="${installer_root_install}" logic="equals" value="1" />
	  </ruleList>
	</actionGroup>
	
        <changePermissions>
            <files>${installdir}/php/tmp</files>
            <permissions>777</permissions>
			<ruleList>
				<platformTest type="unix" />
			</ruleList>
        </changePermissions>
						

		<runProgram>
			<program>${installdir}/sugarctl.sh</program>
			<programArguments>start  &gt; /dev/null 2&gt; /dev/null &lt; /dev/null &amp;</programArguments>
			<ruleList>
				<platformTest type="unix" />
			</ruleList>
		</runProgram>
		<wait>
			<ms>10000</ms>
			<progressText>Starting MySQL</progressText>
			<ruleList>
				<platformTest type="unix" />
			</ruleList>
		</wait>
		<httpGet>
			<url>http://127.0.0.1:${apache_server_port}/sugarcrm/install.php?goto=SilentInstall&amp;cli=true</url>
			<filename>${installdir}/silent.log</filename>
			<progressText>Initializing database, this may take a few minutes.</progressText>
			<ruleList>
				<platformTest type="unix" />
			</ruleList>
		</httpGet>

	<actionGroup>
	  <actionList>
		<changeOwnerAndGroup>
			<files>${installdir}/htdocs/sugarcrm/config_si.php</files>
			<owner>nobody</owner>
			<ruleEvaluationLogic>or</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="linux" />
				<platformTest type="solaris" />
			</ruleList>
		</changeOwnerAndGroup>
		<changePermissions>
			<files>${installdir}/htdocs/sugarcrm/config.php</files>
			<permissions>664</permissions>
			<ruleEvaluationLogic>or</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="linux" />
				<platformTest type="solaris" />
			</ruleList>
		</changePermissions>
		<changeOwnerAndGroup>
			<files>${installdir}/htdocs/sugarcrm/.htaccess</files>
			<owner>root</owner>
			<ruleEvaluationLogic>or</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="linux" />
				<platformTest type="solaris" />
			</ruleList>
		</changeOwnerAndGroup>
	  </actionList>
	  <ruleList>
	    <compareText text="${installer_root_install}" logic="equals" value="1" />
	  </ruleList>
	</actionGroup>


		<writeFile>
			<path>${installdir}/install_summary.txt</path>
			<text>
Installation Summary
------------------------

SugarCRM was installed with the following settings

Installation directory: ${installdir}/
Apache HTTP port: ${web_server_port}
Apache HTTPS port: ${web_server_sslport}
MySQL port: ${database_port}

On Linux, OSX and Solaris systems:
To start SugarCRM: ${installdir}/sugarctl.sh start
To stop SugarCRM: ${installdir}/sugarctl.sh stop

To access SugarCRM, point your browser to:
http://${web_server_domainname}:${web_server_port}/sugarcrm/

To access SugarCRM with SSL, point your browser to:
https://${web_server_domainname}:${web_server_sslport}/sugarcrm/
            </text>
            <ruleList>	
				<compareText text="${mssql-iis-mode}" logic="equals" value="0" />
            </ruleList>
        </writeFile>

        
        <actionGroup>
            <actionList>

		<actionGroup>
		    <actionList>
			<setInstallerVariable name="iis_user" value="IUSR_${env(COMPUTERNAME)}">
			    <ruleList>
				<!-- Only for IIS6 -->
				<compareValues value1="${iis_major_version}" logic="less" value2="7" />
				<compareValues value1="${iis_major_version}" logic="greater" value2="5" />
			    </ruleList>
			</setInstallerVariable>
			<!--setInstallerVariable name="iis_user" value="IIS_IUSRS"-->
			<setInstallerVariable name="iis_user" value="IUSR">
			    <ruleList>
				<!-- Only for IIS7 -->
				<compareValues value1="${iis_major_version}" logic="greater" value2="6" />
			    </ruleList>
			</setInstallerVariable>
			<runProgram>
			    <program>cacls</program>
			    <programArguments>"${installdir.dos}\php\tmp" /E /T /G ${iis_user}:F</programArguments>
			    <abortOnError>0</abortOnError>
			    <showMessageOnError>1</showMessageOnError>
			</runProgram>
			<!--runProgram>
			    <program>cacls</program>
			    <programArguments>"${installdir.dos}\php" /E /T /G ${iis_user}:R</programArguments>
			    <abortOnError>0</abortOnError>
			    <showMessageOnError>1</showMessageOnError>
			    </runProgram-->
			<runProgram>
			    <program>cacls</program>
			    <programArguments>"${installdir.dos}\htdocs\sugarcrm\config.php" /E /T /G ${iis_user}:F</programArguments>
			    <abortOnError>0</abortOnError>
			    <showMessageOnError>0</showMessageOnError>
			</runProgram>
			<runProgram>
			    <program>cacls</program>
			    <programArguments>"${installdir.dos}\htdocs\sugarcrm\.htaccess" /E /T /G ${iis_user}:F</programArguments>
			    <abortOnError>0</abortOnError>
			    <showMessageOnError>0</showMessageOnError>
			</runProgram>
			<runProgram>
			    <program>cacls</program>
			    <programArguments>"${installdir.dos}\htdocs\sugarcrm" /E /T /G ${iis_user}:F</programArguments>
			    <abortOnError>0</abortOnError>
			    <showMessageOnError>0</showMessageOnError>
			</runProgram>
		    </actionList>
		    <ruleList>
			<compareText text="${http_server}" logic="equals" value="iis" />
		    </ruleList>
		</actionGroup>



		<!-- This wait is included to solve timing issues when another mysql is already running -->
		<wait><ms>8000</ms></wait>
                <runProgram>
                    <program>${installdir.dos.unix}\mysql\bin\mysqld.exe</program>
                    <programArguments>--defaults-file=${installdir.dos}\mysql\my.ini &amp;</programArguments>
                    <workingDirectory></workingDirectory>
                    <ruleList>
                        <compareText text="${db_server}" logic="equals" value="mysql" />
                    </ruleList>
                </runProgram>
		<waitForPort port="${database_port}" timeout="30000" />

                <!--wait>
                    <ms>8000</ms>
                </wait-->
                <runProgram>
                    <program>${installdir}/bin/runctl.bat</program>
                    <programArguments>apache start &amp;</programArguments>
                    <progressText>Starting Apache</progressText>
                    <ruleList>
                        <compareText text="${http_server}" logic="equals" value="apache" />
                    </ruleList>
                </runProgram>

                <runProgram>
                    <showMessageOnError>0</showMessageOnError>
                    <abortOnError>0</abortOnError>
                    <program>${iisreset}</program>
                    <programArguments>/restart</programArguments>
                    <ruleList>
                        <compareText text="${http_server}" logic="equals" value="iis" />
                    </ruleList>
                </runProgram>                

                <wait>
                    <ms>12000</ms>
                    <progressText>Starting configuration process</progressText>
                </wait>
                <httpGet>
                    <url>http://127.0.0.1:${web_server_port}/sugarcrm/install.php?goto=SilentInstall&amp;cli=true</url>
                    <filename>${installdir}/silent.log</filename>
                    <progressText>Initializing database, this may take a few minutes.</progressText>
                    <abortOnError>0</abortOnError>
                </httpGet>

                <httpGet>
                    <url>http://127.0.0.1/${iis_virtualdir_name}/install.php?goto=SilentInstall&amp;cli=true</url>
                    <filename>${installdir}/silent.log</filename>
                    <progressText>Initializing database, this may take a few minutes.</progressText>
                    <abortOnError>0</abortOnError>
                    <ruleList>
                        <compareText text="${http_server}" logic="equals" value="iis" />
                    </ruleList>
                </httpGet>

                <addFilesToUninstaller files="${installdir}/htdocs/sugarcrm/silent.log" />

                <runProgram>
                    <showMessageOnError>0</showMessageOnError>
                    <abortOnError>0</abortOnError>
                    <program>${iisreset}</program>
                    <programArguments>/stop</programArguments>
                    <ruleList>
                        <!-- Only for IIS6 -->
                                <compareValues value1="${iis_major_version}" logic="less" value2="7" />
                                <compareValues value1="${iis_major_version}" logic="greater" value2="5" />

                        <compareText text="${http_server}" logic="equals" value="iis" />
                    </ruleList>
                </runProgram>         

                <runProgram>
                    <program>${installdir}/bin/runctl.bat</program>
                    <programArguments>apache stop</programArguments>
                </runProgram>
                <wait>
                    <ms>12000</ms>
                </wait>

                <runProgram>
                    <abortOnError>0</abortOnError>
                    <progressText>Shutting down MySQL</progressText>
                    <program>${installdir}\mysql\bin\mysqladmin.exe</program>
                    <programArguments>--defaults-file=${installdir.dos}\mysql\my.ini -u ${database_root_user} --password=${database_root_password} shutdown</programArguments>
                    <ruleList>
                        <compareText text="${db_server}" logic="equals" value="mysql" />
                    </ruleList>
                </runProgram>
                <runProgram>
                    <progressText>Installing Services</progressText>
                    <program>${installdir}/bin/serviceinstall.bat</program>
                    <programArguments>INSTALL</programArguments>
                    <runAs></runAs>
                    <workingDirectory></workingDirectory>
                    <ruleList>
                        <compareText text="${installAsService}" logic="equals" value="1" />
                    </ruleList>
                </runProgram>
            </actionList>
            <ruleList>
                <platformTest type="windows" />
            </ruleList>
        </actionGroup>
	<actionGroup>
	  <actionList>
	    <addUnixService>
              <name>sugarcrm</name>
              <description>sugarcrm service</description>
              <program>${installdir}/common/scripts/sugarcrm</program>
              <abortOnError>0</abortOnError>
	      <ruleEvaluationLogic>or</ruleEvaluationLogic>
              <ruleList>
                <platformTest type="linux" />			
              </ruleList>			
	    </addUnixService>
	  </actionList>
	  <ruleList>
                <compareText text="${installAsService}" logic="equals" value="1" />
		<compareText text="${installer_root_install}" logic="equals" value="1" />
	  </ruleList>
	  </actionGroup>
		
		<!--Service installation OSX -->
		<actionGroup>
			<actionList>
				<runProgram>
					<program>echo</program>
					<programArguments>'${sudopass}' | sudo -S mkdir /Library/StartupItems</programArguments>
				</runProgram>
				<runProgram>
					<program>echo</program>
					<programArguments>'${sudopass}' | sudo -S chgrp wheel /Library/StartupItems</programArguments>
				</runProgram>
			</actionList>
			<ruleEvaluationLogic>and</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="osx" />		
				<fileTest path="/Library/StartupItems" condition="not_exists" />
				<compareText text="${installAsService}" logic="equals" value="1" />
				<!--<compareText text="${installer_root_install}" logic="equals" value="1" />-->
				<compareText text="${sudopass_valid}" logic="equals" value="1" />
			</ruleList>
		</actionGroup>
		
		<actionGroup>
			<actionList>
				<setInstallerVariable>
					<name>service</name>
					<value>Sugarcrm</value>
				</setInstallerVariable>
				<runProgram>
					<program>echo</program>
					<programArguments>'${sudopass}' | sudo -S rm -rf /Library/StartupItems/${service}</programArguments>
				</runProgram>
				<runProgram>
					<program>echo</program>
					<programArguments>'${sudopass}' | sudo -S mkdir /Library/StartupItems/${service}</programArguments>
				</runProgram>
				<runProgram>
					<program>echo</program>
					<programArguments>'${sudopass}' | sudo -S mv ${installdir}/tmp/Sugarcrm /Library/StartupItems/${service}/${service}</programArguments>
				</runProgram>
				<runProgram>
					<program>echo</program>
					<programArguments>'${sudopass}' |  sudo -S mv ${installdir}/tmp/StartupParameters.plist /Library/StartupItems/${service}/StartupParameters.plist</programArguments>
                </runProgram>
				<runProgram>
					<program>echo</program>
					<programArguments>'${sudopass}' |  sudo -S chmod 755 /Library/StartupItems/${service}/${service}</programArguments>
				</runProgram>
				<runProgram>
					<program>echo</program>
					<programArguments>'${sudopass}' |  sudo -S chown root:wheel /Library/StartupItems/${service}/${service} /Library/StartupItems/${service}/StartupParameters.plist</programArguments>
				</runProgram>
			</actionList>
			<ruleEvaluationLogic>and</ruleEvaluationLogic>
			<ruleList>
				<platformTest type="osx" />
				<compareText text="${installAsService}" logic="equals" value="1" />
				<!--<compareText text="${installer_root_install}" logic="equals" value="1" />-->
				<compareText text="${sudopass_valid}" logic="equals" value="1" />
			</ruleList>
		</actionGroup>
  		
		
		<deleteFile path="${installdir}/tmp/">
			<ruleList>
				<platformTest type="osx" />
			</ruleList>
		</deleteFile>

		<!--Set sugarcrm start in the computer init. Root only on Solaris.-->
		<actionGroup>
			<actionList>
		       
				<copyFile>
					<origin>${installdir}/sugarctl.sh</origin>
					<destination>/etc/init.d/sugarcrm</destination>
				</copyFile>	
				
				<createSymLink>
					<target>../init.d/sugarcrm</target>
					<linkName>/etc/rc0.d/K99sugarcrm</linkName>
				</createSymLink>
			
				<createSymLink>
					<target>../init.d/sugarcrm</target>
					<linkName>/etc/rc1.d/K99sugarcrm</linkName>
				</createSymLink>
			
				<createSymLink>
					<target>../init.d/sugarcrm</target>
					<linkName>/etc/rc2.d/S99sugarcrm</linkName>
				</createSymLink>
			
				<createSymLink>
					<target>../init.d/sugarcrm</target>
					<linkName>/etc/rc3.d/S99sugarcrm</linkName>
				</createSymLink>
			</actionList>
			<ruleEvaluationLogic>and</ruleEvaluationLogic>
			<ruleList>
				<compareText text="${installAsService}" logic="equals" value="1" />
				<compareText logic="equals" text="${installer_root_install}" value="1" />	   				
				<platformTest type="solaris" />
			</ruleList>
		</actionGroup>
    </postInstallationActionList>  


    <preUninstallationActionList>
        <showQuestion variable="remove_mysql" text="Do you want the uninstallation to also remove the SugarCRM database data?" />
        <actionGroup>
            <actionList>
                <runProgram>
                    <program>${installdir}/sugarctl.sh</program>
                    <programArguments>stop apache</programArguments>
                </runProgram>
                <wait>
                    <ms>3000</ms>
                </wait>
                <runProgram>
                    <program>${installdir}/sugarctl.sh</program>
                    <programArguments>stop mysql</programArguments>
                </runProgram>
            </actionList>
            <ruleList>
                <platformTest type="unix" />
            </ruleList>
        </actionGroup>
        
        <actionGroup abortOnError="0" showMessageOnError="0" >
            <actionList>
                <runProgram>
                    <progressText>Waiting for Services to stop, please be patient</progressText>		
                    <program>${installdir}/bin/allctl.bat</program>
                    <programArguments>stop</programArguments>
                    <workingDirectory>${installdir}/bin</workingDirectory>
                </runProgram>
                <runProgram>
                    <program>${installdir}/bin/servicerun.bat</program>
                    <programArguments>stop</programArguments>
                </runProgram>
                <wait>
                    <progressText>Waiting for Services to stop, please be patient</progressText>
                    <ms>8000</ms>
                </wait>
                <runProgram>
                    <program>${installdir}/bin/serviceinstall.bat</program>
                    <programArguments>REMOVE</programArguments>
                </runProgram>
                <wait>
                    <progressText>Removing services</progressText>
                    <ms>5000</ms>
                </wait>
		<deleteFile>
		    <path>${windows_folder_common_programs}\Microsoft SQL Server 2005</path>
		    <ruleList>
			<compareText text="${mssql_iis_mode}" logic="equals" value="1" />
			<compareText text="${mssql_installtype}" logic="equals" value="bundled" />
			<fileTest path="${windows_folder_common_programs}\Microsoft SQL Server 2005" condition="is_empty"/>
		    </ruleList>
		</deleteFile>
                     </actionList>
	    <ruleList>
                <platformTest type="windows" />
            </ruleList>
        </actionGroup>

	<actionGroup abortOnError="0" showMessageOnError="0" >
	  <actionList>
            <deleteFile>
	      <abortOnError>0</abortOnError>
	      <showMessageOnError>0</showMessageOnError>
              <path>/etc/init.d/sugarcrm</path>
            </deleteFile>
            <deleteFile>
	      <abortOnError>0</abortOnError>
	      <showMessageOnError>0</showMessageOnError>
              <path>/etc/rc0.d/K99sugarcrm</path>
            </deleteFile>
            <deleteFile>
	      <abortOnError>0</abortOnError>
	      <showMessageOnError>0</showMessageOnError>
              <path>/etc/rc1.d/K99sugarcrm</path>
            </deleteFile>
            <deleteFile>
	      <abortOnError>0</abortOnError>
	      <showMessageOnError>0</showMessageOnError>
              <path>/etc/rc2.d/S99sugarcrm</path>
            </deleteFile>
            <deleteFile>
	      <abortOnError>0</abortOnError>
	      <showMessageOnError>0</showMessageOnError>
              <path>/etc/rc3.d/S99sugarcrm</path>
            </deleteFile>
	  </actionList>
	  <ruleList>
	    <compareText text="${installAsService}" logic="equals" value="1" />
	    <compareText logic="equals" text="${installer_root_install}" value="1" />	   				
	    <platformTest type="solaris" />
	  </ruleList>
	</actionGroup>

	<!-- Remove logs, cache and temporary files -->
	<deleteFile path="${installdir}/apache2/logs/" />
	<deleteFile path="${installdir}/php/tmp" />
	<deleteFile path="${installdir}/htdocs/sugarcrm/install.log" />
	<deleteFile path="${installdir}/htdocs/sugarcrm/cache" />

    </preUninstallationActionList>
    


    <postUninstallationActionList>
        <actionGroup>
            <actionList>
                <runProgram>
                    <progressText>Deleting SugarCRM database</progressText>
                    <program>${mssql_binary_directory}${mssql_binary}</program>
                    <programArguments>-U ${database_root_user} -P ${database_root_password} -S ${mssql_dsn} -Q "drop database ${database_db_name}"</programArguments>
                    <ruleList>
                        <compareText text="${mssql_installtype}" logic="equals" value="existing" />
                        <compareText text="${remove_mysql}" logic="equals" value="yes"/>
                        <compareText text="${mssql_db_type}" logic="equals" value="new" />
                    </ruleList>
                </runProgram>
                <runProgram>
                    <progressText>Deleting SugarCRM database</progressText>
                    <program>${mssql_binary_directory}${mssql_binary}</program>
                    <programArguments>-U ${database_db_user} -P ${database_db_password} -S ${mssql_dsn} -d ${database_db_name} -Q "exec sp_msforeachtable @command1 = 'drop table ?'"</programArguments>
                    <ruleList>
                        <compareText text="${mssql_installtype}" logic="equals" value="existing" />
                        <compareText text="${remove_mysql}" logic="equals" value="yes"/>
                        <compareText text="${mssql_db_type}" logic="equals" value="existing" />
                    </ruleList>
		</runProgram>
		<runProgram>
		    <progressText>Deleting SugarCRM database</progressText>
                    <program>${mssql_binary_directory}${mssql_binary}</program>
		    <programArguments>-U ${database_db_user} -P ${database_db_password} -S ${mssql_dsn} -Q "drop database ${database_db_name}"</programArguments>
                    <ruleList>
                        <compareText text="${mssql_installtype}" logic="equals" value="existing" />
                        <compareText text="${remove_mysql}" logic="equals" value="yes"/>
			<compareText text="${mssql_db_type}" logic="equals" value="existing" />
                    </ruleList>
                </runProgram>
            </actionList>
            <ruleList>
                <platformTest type="windows"/>
            </ruleList>
        </actionGroup>

                <runProgram>
                    <showMessageOnError>0</showMessageOnError>
                    <abortOnError>0</abortOnError>
                    <program>${iisreset}</program>
                    <programArguments>/stop</programArguments>
                    <ruleList>
                        <platformTest type="windows" />
                        <compareText text="${http_server}" logic="equals" value="iis" />
                    </ruleList>
                </runProgram>                
        <deleteFile path="${installdir}/silent.log" />    
        <deleteFile path="${installdir}/php" />	    
		<deleteFile path="${installdir}/htdocs" />	    	
        <deleteFile path="${installdir}/mysql/bin" />
        <deleteFile path="${installdir}/install_summary.txt" />
        <deleteFile>
            <path>${installdir}/mssql</path>
            <ruleList>
                <compareText text="${remove_mysql}" logic="equals" value="yes" />
            </ruleList>
        </deleteFile>
        <deleteFile>
            <path>${installdir}/mysql</path>
            <ruleList>
                <compareText text="${remove_mysql}" logic="equals" value="yes" />
            </ruleList>
        </deleteFile>
        <deleteFile path="${installdir}/apache2" />
		<deleteFile path="${installdir}">
            <ruleList>
                <fileTest path="${installdir}" condition="is_empty"/>
            </ruleList>
        </deleteFile>

                <runProgram>
                    <showMessageOnError>0</showMessageOnError>
                    <abortOnError>0</abortOnError>
                    <program>${iisreset}</program>
                    <programArguments>/start</programArguments>
                    <ruleList>
                        <platformTest type="windows" />
                        <compareText text="${http_server}" logic="equals" value="iis" />
                    </ruleList>
                </runProgram>                

    </postUninstallationActionList>    

    
    <finalPageActionList>
        <actionGroup progressText="Launch SugarCRM now?" >
            <actionList>
                <runProgram>
                    <program>${installdir}/bin/allctl.bat</program>
                    <programArguments>start &amp;</programArguments>
                    <ruleEvaluationLogic>and</ruleEvaluationLogic>		    
                    <showMessageOnError>0</showMessageOnError>
                    <abortOnError>0</abortOnError>
                    <ruleList>
                        <compareText text="${installAsService}" logic="does_not_equal" value="1" />
                        <platformTest type="windows" />			
                        <compareText text="${db_server}" logic="equals" value="mysql" />
                    </ruleList>
                </runProgram>
                <runProgram>
                    <program>${installdir}/bin/servicerun.bat</program>
                    <programArguments>START &amp;</programArguments>
                    <ruleEvaluationLogic>and</ruleEvaluationLogic>		    
		    <showMessageOnError>0</showMessageOnError>
                    <abortOnError>0</abortOnError>
                    <ruleList>
                        <compareText text="${installAsService}" logic="equals" value="1" />
                        <platformTest type="windows" />			
                        <compareText text="${http_server}" logic="equals" value="apache" />
                    </ruleList>
                </runProgram>
                
                <runProgram>
                    <showMessageOnError>0</showMessageOnError>
                    <abortOnError>0</abortOnError>
                    <program>${iisreset}</program>
                    <programArguments>/start</programArguments>
                    <ruleList>
                        <platformTest type="windows" />
                        <compareText text="${http_server}" logic="equals" value="iis" />
                    </ruleList>
                </runProgram>                

				<waitForPort>
                    <port>${web_server_port}</port>
                    <timeout>10000</timeout>
                </waitForPort>
            
                <setEnvironmentVariable name="DYLD_LIBRARY_PATH" value="" />

		<launchBrowser url="http://${web_server_domainname}:${web_server_port}/sugarcrm">
		    <ruleList><compareText text="${http_server}" logic="does_not_equal" value="iis" /></ruleList>
		</launchBrowser>
		<launchBrowser url="http://${web_server_domainname}:${web_server_port}/${iis_virtualdir_name}">
		    <ruleList><compareText text="${http_server}" logic="equals" value="iis" /></ruleList>
		</launchBrowser>
		
            </actionList>
            <ruleList>
                <compareText text="${installer_ui}" logic="equals" value="gui" />
            </ruleList>
        </actionGroup>

    </finalPageActionList> 
</project>
