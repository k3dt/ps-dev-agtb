<parameters>
<!-- Prompts where to copy the content files and takes a web site path (such as
     "contoso.com/app"). -->
  <parameter name="AppPath" 
        defaultValue="sugarcrm" 
        tags="iisapp">
    <parameterEntry type="ProviderPath" scope="iisapp" match="SugarCE-Full-%SUGAR_VERSION%" />
  </parameter>
  <parameter name="Site URL" description="Enter the fully qualified URL for your Sugar instance ( i.e., http://localhost/sugarcrm/ )" defaultValue="http://localhost/sugarcrm" tags="AppURL">   
  </parameter>
  <parameter name="Automatic Site URL phpconfig" defaultValue="'setup_site_url' => '{Site URL}'," tags="Hidden" >
    <parameterEntry kind="TextFile" scope="\\config_si.php$" match="'setup_site_url'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <parameter name="Automatic Site URL PostInstall" defaultValue="'site_url' => '{Site URL}'," tags="Hidden" >
    <parameterEntry type="TextFile" scope="\\config.php$" match="'site_url'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <parameter name="SetAclParameter2"
        defaultValue="{AppPath}" tags="Hidden">
    <parameterEntry type="ProviderPath" scope="setAcl" match="SugarCE-Full-%SUGAR_VERSION%$" />
  </parameter>
  <parameter name="AdminUserPass"
        friendlyName="Administrator Password"
        description="Password for the SugarCRM admin user ( the administration username is 'admin' )"
        defaultValue="" tags="Password, New,NoStore">
  </parameter>
  <parameter name="Automatic AdminUserPass" defaultValue="'setup_site_admin_password' => '{AdminUserPass}'," tags="NoStore,Hidden">
    <parameterEntry type="TextFile" scope="\\config_si.php$" match="'setup_site_admin_password'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <!-- NOTE - When we support multiple databases, we need a way to get this
       parameter populated without prompting the user a second time -->
  <parameter name="setup_db_type" description="Default to mysql - as this is the only one supported" 
        defaultValue="mysql" tags="Hidden">
    <parameterEntry type="TextFile" scope="\\config_si.php$" match="'setup_db_type'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <!-- ACL Section -->
  <!-- For now, we're doing one big ACL for everything.  -->
  <parameter name="Install Directory" description="ACL Setup" defaultValue="{AppPath}" 
        tags="Hidden">
    <parameterEntry type="ProviderPath" scope="setACL" match="SugarCE-Full-%SUGAR_VERSION%" />
  </parameter>
  <!-- Database Parameters
       The tags provided here tells the UI being used what type of parameter
       this is.  The UI can then construct an appropriate dialog for the
       database parameters, or fill them in if the user doesn't need to
       provide them -->
  <!-- This parameter prompts the user for the database server name.
       Note that this parameter has only one parameterEntry element.
       This parameter is used with the configuration file and the
       connection string.  It is not used within the SQL script itself
       like the other paramters are. -->
  <parameter name="DbServer"  defaultValue="localhost" tags="MySQL,dbServer" />
  <parameter name="Automatic host name " defaultValue="'setup_db_host_name' => '{DbServer}'," tags="NoStore,Hidden">
    <parameterEntry type="TextFile" scope="\\config_si.php$" match="'setup_db_host_name'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <parameter name="Automatic host name PostInstall " defaultValue="'db_host_name' => '{DbServer}'," tags="NoStore,Hidden">
    <parameterEntry type="TextFile" scope="\\config.php$" match="'db_host_name'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <!-- This parameter prompts the user for the database name. -->
  <parameter name="DbName"
        defaultValue="sugarcrm" tags="MySQL, dbName">
    <parameterValidation type="RegularExpression" validationString="^\w{1,16}$" />
    <parameterEntry type="TextFile" scope="install.sql" match="PlaceHolderForDbName" />
  </parameter>
  <parameter name="Automatic DbName" defaultValue="'setup_db_database_name' => '{DbName}'," tags="Hidden,MySQL">
    <parameterEntry type="TextFile" scope="\\config_si.php$" match="'setup_db_database_name'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <parameter name="Automatic DbName PostInstall" defaultValue="'db_name' => '{DbName}'," tags="Hidden,MySQL">
    <parameterEntry type="TextFile" scope="\\config.php$" match="'db_name'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <!-- This parameter prompts the user for the database username. -->
  <parameter name="DbUsername"
        defaultValue="sugaruser" tags="MySQL, DbUsername">
    <parameterValidation type="RegularExpression" validationString="^\w{1,16}$" />
    <parameterEntry type="TextFile" scope="install.sql" match="PlaceHolderForUser" />
  </parameter>
  <parameter name="Automatic DbUsername" defaultValue="'setup_db_sugarsales_user' => '{DbUsername}'," tags="Hidden,MySQL">
    <parameterEntry type="TextFile" scope="\\config_si.php$" match="'setup_db_sugarsales_user'\s*=>\s*'[^']*'\s*," />
  </parameter> 
  <parameter name="Automatic DbAdmin" defaultValue="'setup_db_admin_user_name' => '{DbUsername}'," tags="Hidden,MySQL">
    <parameterEntry type="TextFile" scope="\\config_si.php$" match="'setup_db_admin_user_name'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <parameter name="Automatic DbUsername PostInstall" defaultValue="'db_user_name' => '{DbUsername}'," tags="Hidden,MySQL">
    <parameterEntry type="TextFile" scope="\\config.php$" match="'db_user_name'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <!-- This parameter prompts the user for the database user's password. -->
  <parameter name="DbPassword" tags="New, Password, MySQL, DbUserPassword">
    <parameterEntry type="TextFile" scope="install.sql" match="PlaceHolderForPassword" />
  </parameter>
  <parameter name="Automatic DbPassword" defaultValue="'setup_db_sugarsales_password' => '{DbPassword}'," tags="Hidden,MySQL" >
    <parameterEntry type="TextFile" scope="\\config_si.php$" match="'setup_db_sugarsales_password'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <parameter name="Automatic DbPassword PostInstall" defaultValue="'db_password' => '{DbPassword}'," tags="Hidden,MySQL" >
    <parameterEntry type="TextFile" scope="\\config.php$" match="'db_password'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <parameter name="Automatic DbAdminPW" defaultValue="'setup_db_admin_password' => '{DbPassword}'," tags="Hidden,MySQL">
    <parameterEntry type="TextFile" scope="\\config_si.php$" match="'setup_db_admin_password'\s*=>\s*'[^']*'\s*," />
  </parameter>
  <!-- Prompts for the admin creds and uses it for the administrator
       connection string. This is used to create a login and assign
       permissions. The MySQL tag indicates it is a parameter required for
       MySQL.
       The DbAdminUsername tag indicates it should be used when the user
       is creating a new database. If they're not, it can be filled in
       with the DbUsername value.  The UI should be able to figure out
       whether or not the user needs to be prompted for this. -->
  <parameter name="DbAdmin"
        defaultValue="root" tags="MySQL, DbAdminUsername">
  </parameter>
  <!-- Prompts for the admin password and uses it for the administrator
       connection string. -->
  <parameter name="DbAdminPW" 
        tags="Password, MySQL, DbAdminPassword">
  </parameter>
  <!-- This is the hidden admin connection string used to run the
       database scripts.  Note that this connection string is just used
       here, and will probably be different from the connection string that
       is used by the application itself. -->
  <parameter name="Connection String" 
        defaultValue="Server={DbServer};Database={DbName};uid={DbAdmin};Pwd={DbAdminPW};"
        tags="Hidden,MySQLConnectionString,Validate,MySQL">
    <parameterEntry type="ProviderPath" scope="dbmysql" match="install.sql" />
  </parameter>
  <!-- Demo Data should be an enum, either presented as a drop down, or as a radio
       button group.  Not sure how best to represent this with the RC.  TODO - revisit. 
       Valid values are no, yes, and multi for multibyte data.  For now, we'll present
       this as a string field with a cue in the description. -->
  <parameter name="Install Demo Data" 
        description="You can choose to populate the SugarCRM database with demo data.  This process may take several minutes to complete.  Would you like to load the demo data?"
        defaultValue="no"
        tags="">
    <parameterValidation type="Enumeration" validationString="Yes,No" />
    <parameterEntry type="TextFile" scope="\\config_si.php" 
            match="PlaceholderForDemoData" />
  </parameter>
</parameters>
